!function(e,t){if("object"==typeof exports&&"object"==typeof module)module.exports=t();else if("function"==typeof define&&define.amd)define([],t);else{var n=t();for(var r in n)("object"==typeof exports?exports:e)[r]=n[r]}}(self,(()=>(()=>{var e={962:()=>{if("function"!=typeof importScripts){class e{#e;#t;#n;data;constructor(e,t){if(isNaN(e)||isNaN(t))throw new Error("This interface supports only numeric 'width' and 'height' as arguments.");this.#t=e,this.#n=t,this.data=new Array(e*t),this.palette=[[0,0,0,0]]}get palette(){return this.#e}set palette(e){if(!Array.isArray(e))throw new Error("The palette must be an array.");if(e.length<1)throw new Error("A palette must consist of at least one color.");if(!e.every((e=>Array.isArray(e))))throw new Error("Each entry in the palette must be a sub-array of color channel values.");e.forEach((e=>{e.length=4,void 0===e[3]&&(e[3]=255)}));const t={byte:e,dword:new Uint32Array(e.map((e=>e[3]<<24|e[2]<<16|e[1]<<8|e[0])))};this.#e=new Proxy(t,{set:(e,t,n)=>(e.byte[t]=n,this.palette=e.byte,!0),get:(e,t)=>e[t]||e.byte[t]})}get width(){return this.#t}get height(){return this.#n}get colorSpace(){return"indexed"}}class t{#r;#o;#t;#n;constructor(e){if(!(e instanceof CanvasRenderingContext2D))throw new Error("CanvasRenderingContextIndexed requires an instance of CanvasRenderingContext2D as an argument.");if(this.#r=e,this.#t=this.#r.canvas.width,this.#n=this.#r.canvas.height,this.#o=this.#r.createImageData(this.#t,this.#n),this.#o.data.fill(0),isNaN(this.#t)||isNaN(this.#n)||this.#n<1||this.#t<1)throw new Error("Invalid context resolution.")}createImageData(t=this.#t,n=this.#n){if(t instanceof ImageData)throw new Error("This interface supports only 'width' and 'height' as arguments.");if(t!==this.#t||n!==this.#n)throw new Error("This interface can only create images whose resolution matches the size of the canvas.");return new e(t,n)}getImageData(){return this.#o}putImageData(t){if(!(t instanceof e))throw new Error("Only images of type IndexedImageData can be rendered.");if(t.width!==this.#t||t.height!==this.#n)throw new Error("Mismatched image resolution: images must be the size of the canvas.");{const e=t.palette.dword,n=new Uint32Array(this.#o.data.buffer);for(let r=0;r<t.data.length;r++)n[r]=e[t.data[r]]}this.#r.putImageData(this.#o,0,0)}}class n extends HTMLCanvasElement{#a;#i;constructor(){super()}static get observedAttributes(){return["width","height"]}attributeChangedCallback(e,n,r){n!=r&&["width","height"].includes(e)&&(this.#a=super.getContext("2d"),this.#i=new t(this.#a))}getContext(e="2d"){if("2d"!==e)throw new Error("This interface only supports the '2d' context type.");return this.#i}}window.IndexedImageData=e,window.CanvasRenderingContextIndexed=t,window.HTMLPalettedCanvasElement=n,customElements.define("paletted-canvas",n,{extends:"canvas"})}}},t={};function n(r){var o=t[r];if(void 0!==o)return o.exports;var a=t[r]={exports:{}};return e[r](a,a.exports,n),a.exports}n.d=(e,t)=>{for(var r in t)n.o(t,r)&&!n.o(e,r)&&Object.defineProperty(e,r,{enumerable:!0,get:t[r]})},n.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),n.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})};var r={};return(()=>{"use strict";n.r(r),n.d(r,{Rngon:()=>S}),n(962);const e={enabled:[[[.25,0],[.5,.75]],[[.75,.5],[0,.25]]],disabled:[[[0,0],[0,0]],[[0,0],[0,0]]]};function t({ngonIdx:t,leftEdges:n,rightEdges:r,numLeftEdges:o,numRightEdges:a,pixelBuffer32:i}){if(!o||!a)return!0;const s=Rngon.state.active.ngonCache.ngons[t],l=Rngon.state.active.usePalette,d=Rngon.state.active.useFragmentBuffer,h=Rngon.state.active.fragmentBuffer.data,c=Rngon.state.active.useDepthBuffer?Rngon.state.active.depthBuffer.data:null,g=Rngon.state.active.pixelBuffer,u=g.data,f=g.width,p=s.material,v=p.texture||null,m=v&&"bilinear"===p.textureFiltering,x=v&&"dither"===p.textureFiltering?e.enabled:e.disabled;let w=null,R=0;if(v){const e=v.mipLevels.length;R=Math.max(0,Math.min(e-1,Math.round((e-1)*s.mipLevel))),w=v.mipLevels[R]}let y=0,b=0,z=n[y],M=r[b];const _=n[0].top,B=n[o-1].bottom;let S=_-1;for(;++S<B;){const e=Math.min(f,Math.max(0,Math.round(z.x))),o=Math.min(f,Math.max(0,Math.ceil(M.x))),a=o-e+1;if(a>0){const n=(M.depth-z.depth)/a;let r=z.depth-n;const s=(M.shade-z.shade)/a;let g=z.shade-s;const R=(M.u-z.u)/a;let y=z.u-R;const b=(M.v-z.v)/a;let I=z.v-b;const L=(M.invW-z.invW)/a;let j=z.invW-L;if(d)var P=(M.worldX-z.worldX)/a,C=z.worldX-P,E=(M.worldY-z.worldY)/a,A=z.worldY-E,W=(M.worldZ-z.worldZ)/a,D=z.worldZ-W;let N=e+S*f-1,T=e-1;for(;++T<o;){let o=0,f=0;r+=n,g+=s,y+=R,I+=b,j+=L,N++,d&&(C+=P,A+=E,D+=W);const z=r/j;if(c&&c[N]<=z)continue;let M,k=p.renderVertexShade?g:1,O=0,U=0,X=0,F=0;if(v){switch(p.textureMapping){case"affine":switch(o=y/j,f=I/j,p.uvWrapping){case"clamp":{const e=1-Number.EPSILON;o=o<0?e+o:o,f=f<0?e+f:f;const t=x[1&S][1&T];o+=t[0]/w.width,f+=t[1]/w.height,o=w.width*(o<0?0:o>e?e:o),f=w.height*(f<0?0:f>e?e:f);break}case"repeat":{const e=x[1&S][1&T];o+=e[0]/w.width,f+=e[1]/w.height,o=w.width*(o-Math.floor(o)),f=w.height*(f-Math.floor(f));const t=Math.abs(o),n=Math.abs(f),r=t-~~t,a=n-~~n;o=(o&w.width-1)+r,f=(f&w.height-1)+a;break}default:Rngon.$throw("Unrecognized UV wrapping mode.")}break;case"affine-npot":{o=y/j,f=I/j;const e=1-Number.EPSILON;o=o<0?e+o:o,f=f<0?e+f:f;const t=x[1&S][1&T];o+=t[0]/w.width,f+=t[1]/w.height,o=w.width*(o<0?0:o>e?e:o),f=w.height*(f<0?0:f>e?e:f)}break;case"ortho":{const t=B-_,n=T-e+1,r=S-_+1,i=x[1&S][1&T];o+=i[0],f+=i[1],o=n*(w.width/a),f=r*(w.height/t),f=w.height-f;break}default:Rngon.$throw("Unknown texture-mapping mode.")}if(M=w.pixels[~~o+~~f*w.width],!M)continue;if(p.allowAlphaReject&&255!==M.alpha)continue;if(p.allowAlphaBlend&&Rngon.defaultPipeline.rasterizer.stipple(p.color.alpha,T,S))continue;F=M.index,O=M.red,U=M.green,X=M.blue}else{if(p.allowAlphaBlend&&Rngon.defaultPipeline.rasterizer.stipple(p.color.alpha,T,S))continue;F=p.color.index,O=p.color.red*k,U=p.color.green*k,X=p.color.blue*k}if(l)u[N]=F;else{if(m){const e=o-(o=~~o),t=f-(f=~~f);let n=w.pixels[o+1+f*w.width]||M,r=w.pixels[o+(f+1)*w.width]||M,a=w.pixels[o+1+(f+1)*w.width]||M;255!==n.alpha&&(n=M),255!==r.alpha&&(r=M),255!==a.alpha&&(a=M);const i={red:Rngon.lerp(O,n.red,e),green:Rngon.lerp(U,n.green,e),blue:Rngon.lerp(X,n.blue,e)},s={red:Rngon.lerp(r.red,a.red,e),green:Rngon.lerp(r.green,a.green,e),blue:Rngon.lerp(r.blue,a.blue,e)};O=k*p.color.unitRange.red*Rngon.lerp(i.red,s.red,t),U=k*p.color.unitRange.green*Rngon.lerp(i.green,s.green,t),X=k*p.color.unitRange.blue*Rngon.lerp(i.blue,s.blue,t)}else O*=k*p.color.unitRange.red,U*=k*p.color.unitRange.green,X*=k*p.color.unitRange.blue;if(k>1){const e=4*N;u[e+0]=O,u[e+1]=U,u[e+2]=X,u[e+3]=255}else i[N]=(255<<24)+(X<<16)+(U<<8)+~~O}if(c&&(c[N]=z),d){const e=h[N];e.ngonIdx=t,e.textureUScaled=~~o,e.textureVScaled=~~f,e.depth=r/j,e.shade=g,e.worldX=C/j,e.worldY=A/j,e.worldZ=D/j,e.w=1/j}}}z.x+=z.delta.x,z.depth+=z.delta.depth,z.shade+=z.delta.shade,z.u+=z.delta.u,z.v+=z.delta.v,z.invW+=z.delta.invW,M.x+=M.delta.x,M.depth+=M.delta.depth,M.shade+=M.delta.shade,M.u+=M.delta.u,M.v+=M.delta.v,M.invW+=M.delta.invW,d&&(z.worldX+=z.delta.worldX,z.worldY+=z.delta.worldY,z.worldZ+=z.delta.worldZ,M.worldX+=M.delta.worldX,M.worldY+=M.delta.worldY,M.worldZ+=M.delta.worldZ),S===z.bottom-1&&(z=n[++y]),S===M.bottom-1&&(M=r[++b])}return!0}function o({ngonIdx:e,leftEdges:t,rightEdges:n,numLeftEdges:r,numRightEdges:o,pixelBuffer32:a}){const i=Rngon.state.active.ngonCache.ngons[e],s=Rngon.state.active.usePalette,l=Rngon.state.active.pixelBuffer,d=l.data,h=l.width,c=Rngon.state.active.useDepthBuffer?Rngon.state.active.depthBuffer.data:null,g=i.material;let u=0,f=0,p=t[u],v=n[f];if(!r||!o)return;const m=t[0].top,x=t[r-1].bottom;let w=m-1;for(;++w<x;){const e=Math.min(h,Math.max(0,Math.round(p.x))),r=Math.min(h,Math.max(0,Math.ceil(v.x))),o=r-e+1;if(o>0){const t=(v.depth-p.depth)/o;let n=p.depth-t;const i=(v.shade-p.shade)/o;let l=p.shade-i;const u=(v.invW-p.invW)/o;let f=p.invW-u,m=e+w*h-1,x=e-1;for(;++x<r;){n+=t,l+=i,f+=u,m++;const e=n/f;if(!(c[m]<=e)){if(s)d[m]=g.color.index;else{const e=g.renderVertexShade?l:1,t=g.color.red*e,n=g.color.green*e,r=g.color.blue*e;if(e>1){const e=4*m;d[e+0]=t,d[e+1]=n,d[e+2]=r,d[e+3]=255}else a[m]=(255<<24)+(r<<16)+(n<<8)+~~t}c[m]=e}}}p.x+=p.delta.x,p.depth+=p.delta.depth,p.shade+=p.delta.shade,p.invW+=p.delta.invW,v.x+=v.delta.x,v.depth+=v.delta.depth,v.shade+=v.delta.shade,v.invW+=v.delta.invW,w===p.bottom-1&&(p=t[++u]),w===v.bottom-1&&(v=n[++f])}return!0}function a({ngonIdx:e,leftEdges:t,rightEdges:n,numLeftEdges:r,numRightEdges:o,pixelBuffer32:a}){if(!r||!o)return!0;const i=Rngon.state.active.ngonCache.ngons[e],s=Rngon.state.active.pixelBuffer,l=s.data,d=s.width,h=Rngon.state.active.useDepthBuffer?Rngon.state.active.depthBuffer.data:null,c=i.material,g=c.texture||null;let u=null,f=0;const p=g.mipLevels.length;f=Math.max(0,Math.min(p-1,Math.round((p-1)*i.mipLevel))),u=g.mipLevels[f];let v=0,m=0,x=t[v],w=n[m];const R=t[0].top,y=t[r-1].bottom;let b=R-1;for(;++b<y;){const e=Math.min(d,Math.max(0,Math.round(x.x))),r=Math.min(d,Math.max(0,Math.ceil(w.x))),o=r-e+1;if(o>0){const t=(w.depth-x.depth)/o;let n=x.depth-t;const i=(w.shade-x.shade)/o;let s=x.shade-i;const g=(w.u-x.u)/o;let f=x.u-g;const p=(w.v-x.v)/o;let v=x.v-p;const m=(w.invW-x.invW)/o;let R=x.invW-m,y=e+b*d-1,z=e-1;for(;++z<r;){n+=t,s+=i,f+=g,v+=p,R+=m,y++;const e=n/R;if(h[y]<=e)continue;let r=f/R,o=v/R;switch(c.uvWrapping){case"clamp":{const e=1-Number.EPSILON;r=r<0?e+r:r,o=o<0?e+o:o,r=u.width*(r<0?0:r>e?e:r),o=u.height*(o<0?0:o>e?e:o);break}case"repeat":r=u.width*(r-Math.floor(r)),o=u.height*(o-Math.floor(o)),r&=u.width-1,o&=u.height-1;break;default:Rngon.$throw("Unrecognized UV wrapping mode.")}const d=u.pixels[~~r+~~o*u.width];{const t=c.renderVertexShade?s:1,n=d.red*t,r=d.green*t,o=d.blue*t;if(t>1){const e=4*y;l[e+0]=n,l[e+1]=r,l[e+2]=o,l[e+3]=255}else a[y]=(255<<24)+(o<<16)+(r<<8)+~~n;h[y]=e}}}x.x+=x.delta.x,x.depth+=x.delta.depth,x.shade+=x.delta.shade,x.u+=x.delta.u,x.v+=x.delta.v,x.invW+=x.delta.invW,w.x+=w.delta.x,w.depth+=w.delta.depth,w.shade+=w.delta.shade,w.u+=w.delta.u,w.v+=w.delta.v,w.invW+=w.delta.invW,b===x.bottom-1&&(x=t[++v]),b===w.bottom-1&&(w=n[++m])}return!0}function i({ngonIdx:e,leftEdges:t,rightEdges:n,numLeftEdges:r,numRightEdges:o,pixelBuffer32:a}){if(!r||!o)return!0;const i=Rngon.state.active.ngonCache.ngons[e],s=Rngon.state.active.usePalette,l=Rngon.state.active.pixelBuffer,d=l.data,h=l.width,c=Rngon.state.active.useDepthBuffer?Rngon.state.active.depthBuffer.data:null,g=i.material,u=g.texture||null,f=u&&"bilinear"===g.textureFiltering;let p=null,v=0;const m=u.mipLevels.length;v=Math.max(0,Math.min(m-1,Math.round((m-1)*i.mipLevel))),p=u.mipLevels[v];let x=0,w=0,R=t[x],y=n[w];const b=t[0].top,z=t[r-1].bottom;let M=b-1;for(;++M<z;){const e=Math.min(h,Math.max(0,Math.round(R.x))),r=Math.min(h,Math.max(0,Math.ceil(y.x))),o=r-e+1;if(o>0){const t=(y.depth-R.depth)/o;let n=R.depth-t;const i=(y.shade-R.shade)/o;let l=R.shade-i;const u=(y.u-R.u)/o;let v=R.u-u;const m=(y.v-R.v)/o;let x=R.v-m;const w=(y.invW-R.invW)/o;let b=R.invW-w,z=e+M*h-1,_=e-1;for(;++_<r;){n+=t,l+=i,v+=u,x+=m,b+=w,z++;const e=n/b;if(c[z]<=e)continue;let r=v/b,o=x/b;switch(g.uvWrapping){case"clamp":{const e=1-Number.EPSILON;r=r<0?e+r:r,o=o<0?e+o:o,r=p.width*(r<0?0:r>e?e:r),o=p.height*(o<0?0:o>e?e:o);break}case"repeat":{r=p.width*(r-Math.floor(r)),o=p.height*(o-Math.floor(o));const e=Math.abs(r),t=Math.abs(o),n=e-~~e,a=t-~~t;r=(r&p.width-1)+n,o=(o&p.height-1)+a;break}default:Rngon.$throw("Unrecognized UV wrapping mode.")}const h=p.pixels[~~r+~~o*p.width];if(s)d[z]=h.color.index;else{const e=g.renderVertexShade?l:1;let t=h.red,n=h.green,i=h.blue;if(f){const a=r-(r=~~r),s=o-(o=~~o);let l=p.pixels[r+1+o*p.width]||h,d=p.pixels[r+(o+1)*p.width]||h,c=p.pixels[r+1+(o+1)*p.width]||h;255!==l.alpha&&(l=h),255!==d.alpha&&(d=h),255!==c.alpha&&(c=h);const u={red:Rngon.lerp(t,l.red,a),green:Rngon.lerp(n,l.green,a),blue:Rngon.lerp(i,l.blue,a)},f={red:Rngon.lerp(d.red,c.red,a),green:Rngon.lerp(d.green,c.green,a),blue:Rngon.lerp(d.blue,c.blue,a)};t=e*g.color.unitRange.red*Rngon.lerp(u.red,f.red,s),n=e*g.color.unitRange.green*Rngon.lerp(u.green,f.green,s),i=e*g.color.unitRange.blue*Rngon.lerp(u.blue,f.blue,s)}else t*=e*g.color.unitRange.red,n*=e*g.color.unitRange.green,i*=e*g.color.unitRange.blue;if(e>1){const e=4*z;d[e+0]=t,d[e+1]=n,d[e+2]=i,d[e+3]=255}else a[z]=(255<<24)+(i<<16)+(n<<8)+~~t}c[z]=e}}R.x+=R.delta.x,R.depth+=R.delta.depth,R.shade+=R.delta.shade,R.u+=R.delta.u,R.v+=R.delta.v,R.invW+=R.delta.invW,y.x+=y.delta.x,y.depth+=y.delta.depth,y.shade+=y.delta.shade,y.u+=y.delta.u,y.v+=y.delta.v,y.invW+=y.delta.invW,M===R.bottom-1&&(R=t[++x]),M===y.bottom-1&&(y=n[++w])}return!0}const s=500,l=new Array(s),d=new Array(s),h=new Array(s).fill().map((()=>({top:void 0,bottom:void 0,start:{x:void 0,depth:void 0,shade:void 0,u:void 0,v:void 0,invW:void 0,worldX:void 0,worldY:void 0,worldZ:void 0},delta:{}}))),c=new Array(s).fill().map((()=>({top:void 0,bottom:void 0,start:{x:void 0,depth:void 0,shade:void 0,u:void 0,v:void 0,invW:void 0,worldX:void 0,worldY:void 0,worldZ:void 0},delta:{}}))),g=(e,t)=>e.y===t.y?0:e.y<t.y?-1:1;function u(){for(let e=0;e<Rngon.state.active.ngonCache.count;e++){const t=Rngon.state.active.ngonCache.ngons[e];t.vertices.length<=0||(1!=t.vertices.length?2!=t.vertices.length?Rngon.defaultPipeline.rasterizer.polygon(t,e):Rngon.defaultPipeline.rasterizer.line(t.vertices[0],t.vertices[1],t.material.color,e,!1):Rngon.defaultPipeline.rasterizer.point(t.vertices[0],t.material,e))}}function f(e){const t=Rngon.vector();let n=e.material.ambientLightLevel;for(let t=0;t<e.vertices.length;t++)e.vertices[t].shade=e.material.ambientLightLevel;let r=0,o=0,a=0;if("flat"===e.material.vertexShading){for(const t of e.vertices)r+=t.x,o+=t.y,a+=t.z;r/=e.vertices.length,o/=e.vertices.length,a/=e.vertices.length}for(const i of Rngon.state.active.lights)if("gouraud"===e.material.vertexShading)for(let n=0;n<e.vertices.length;n++){const r=e.vertices[n],o=Math.sqrt((r.x-i.position.x)*(r.x-i.position.x)+(r.y-i.position.y)*(r.y-i.position.y)+(r.z-i.position.z)*(r.z-i.position.z)),a=1/(1+i.attenuation*o);t.x=i.position.x-r.x,t.y=i.position.y-r.y,t.z=i.position.z-r.z,Rngon.vector.normalize(t);const s=Math.max(0,Math.min(1,Rngon.vector.dot(e.vertexNormals[n],t)));r.shade=Math.max(r.shade,Math.min(i.clip,s*a*i.intensity))}else if("flat"===e.material.vertexShading){const s=Math.sqrt((r-i.position.x)*(r-i.position.x)+(o-i.position.y)*(o-i.position.y)+(a-i.position.z)*(a-i.position.z)),l=1/(1+i.attenuation*s);t.x=i.position.x-r,t.y=i.position.y-o,t.z=i.position.z-a,Rngon.vector.normalize(t);const d=Math.max(0,Math.min(1,Rngon.vector.dot(e.normal,t)));n=Math.max(n,Math.min(i.clip,d*l*i.intensity))}else Rngon.$throw("Unknown shading mode.");if("flat"===e.material.vertexShading)for(let t=0;t<e.vertices.length;t++)e.vertices[t].shade=n}function p(){onmessage=e=>{if("string"==typeof(e=e.data).type)if("render"===e.type)try{importScripts(e.rngonUrl),function(e,t){Rngon.assert?.(Array.isArray(e),"Expected meshes to be provided in an array.");const n=Rngon.renderShared.setup_render_call_info(),r=Object.freeze({...Rngon.renderShared.defaultRenderOptions,...t});Rngon.renderShared.initialize_internal_render_state(r),Rngon.state.active.allowWindowAlert=!1;{const t=Rngon.surface(null,r);Rngon.assert?.(t,"Failed to initialize the render surface."),t.display_meshes(e),n.renderWidth=r.width,n.renderHeight=r.height,n.numNgonsRendered=Rngon.state.active.ngonCache.count,n.image=Rngon.state.active.pixelBuffer}n.totalRenderTimeMs=performance.now()-n.totalRenderTimeMs,postMessage({...n,type:"rendering-finished"})}(e.meshes,e.options)}catch(e){postMessage({type:"error",errorText:e.message})}else postMessage({type:"error",errorText:"Received an unrecognized message."});else postMessage({type:"error",errorText:"A render worker received an invalid message."})}}function v(e=[Rngon.ngon()],t={}){return Rngon.assert?.(e instanceof Array,"Expected a list of ngons for creating an ngon mesh."),Rngon.assert?.(t instanceof Object,"Expected an object with transformation properties."),v.defaultTransform=v.defaultTransform||{translation:Rngon.vector(0,0,0),rotation:Rngon.vector(0,0,0),scaling:Rngon.vector(1,1,1)},Rngon.assert?.(void 0!==Rngon.mesh.defaultTransform?.rotation&&void 0!==Rngon.mesh.defaultTransform?.translation&&void 0!==Rngon.mesh.defaultTransform?.scaling,"The default transforms object for mesh() is missing required properties."),{ngons:e,rotation:(t={...Rngon.mesh.defaultTransform,...t}).rotation,translation:t.translation,scale:t.scaling}}function m(e=[Rngon.vertex()],t=Rngon.material(),n=Rngon.vector(0,1,0)){Rngon.assert?.(e instanceof Array,"Expected an array of vertices to make an ngon."),Rngon.assert?.(t instanceof Object,"Expected an object containing user-supplied options."),t=Rngon.material(t),Array.isArray(n)||(n=new Array(e.length).fill().map((e=>Rngon.vector(n.x,n.y,n.z))));const r=n.reduce(((e,t)=>(e.x+=t.x,e.y+=t.y,e.z+=t.z,e)),Rngon.vector(0,0,0));Rngon.vector.normalize(r);{const t=e.map((e=>e.u)).some((e=>e<0)),n=e.map((e=>e.v)).some((e=>e<0));if(t||n)for(const r of e)t&&0===r.u&&(r.u=-Number.EPSILON),n&&0===r.v&&(r.v=-Number.EPSILON)}return{vertices:e,vertexNormals:n,normal:r,material:t,mipLevel:0}}u.polygon=function(e=Rngon.ngon(),n=0){Rngon.assert?.(e.vertices.length>=3,"Polygons must have 3 or more vertices"),Rngon.assert?.(e.vertices.length<s,"Overflowing the vertex buffer");const r=Rngon.state.active,u=r.usePerspectiveInterpolation,f=r.useFragmentBuffer,p=r.useDepthBuffer?r.depthBuffer.data:null,v=r.pixelBuffer.width,m=r.pixelBuffer.height,x=r.usePalette,w=e.material,R=x?void 0:new Uint32Array(r.pixelBuffer.data.buffer);let y=0,b=0,z=0,M=0;if(function(){e.vertices.sort(g);const t=e.vertices[0],n=e.vertices[e.vertices.length-1];l[y++]=t,d[b++]=t;for(let r=1;r<e.vertices.length-1;r++){const o=Rngon.lerp(t.x,n.x,(e.vertices[r].y-t.y)/(n.y-t.y));e.vertices[r].x>=o?d[b++]=e.vertices[r]:l[y++]=e.vertices[r]}l[y++]=n,d[b++]=n}(),function(){for(let t=1;t<y;t++)e(l[t-1],l[t],!0);for(let t=1;t<b;t++)e(d[t-1],d[t],!1);function e(e,t,n){const r=Math.min(m,Math.max(0,Math.floor(e.y))),o=Math.min(m,Math.max(0,Math.floor(t.y))),a=o-r;if(0===a)return;const i=u?e.w:1,s=u?t.w:1,l=Math.min(v,Math.max(0,Math.floor(e.x))),d=(Math.min(v,Math.max(0,Math.floor(t.x)))-l)/a,g=e.z/Rngon.state.active.farPlaneDistance,p=g/i,x=(t.z/Rngon.state.active.farPlaneDistance/s-g/i)/a,R=e.shade,y=(t.shade-e.shade)/a,b=w.texture?e.u:1,_=w.texture?e.v:1,B=b/i,S=((w.texture?t.u:1)/s-b/i)/a,P=_/i,C=((w.texture?t.v:1)/s-_/i)/a,E=1/i,A=(1/s-1/i)/a,W=n?h[z++]:c[M++];W.top=r,W.bottom=o,W.x=l,W.delta.x=d,W.depth=p,W.delta.depth=x,W.shade=R,W.delta.shade=y,W.u=B,W.delta.u=S,W.v=P,W.delta.v=C,W.invW=E,W.delta.invW=A,f&&(W.worldX=e.worldX/i,W.delta.worldX=(t.worldX/s-e.worldX/i)/a,W.worldY=e.worldY/i,W.delta.worldY=(t.worldY/s-e.worldY/i)/a,W.worldZ=e.worldZ/i,W.delta.worldZ=(t.worldZ/s-e.worldZ/i)/a)}}(),w.hasFill){const e={ngonIdx:n,leftEdges:h,rightEdges:c,numLeftEdges:z,numRightEdges:M,pixelBuffer32:R};if(!r.modules.raster_shader?.(e)){let n;n=!w.texture||!p||f||r.usePalette||w.allowAlphaReject||w.allowAlphaBlend||"affine"!==w.textureMapping||"dither"===w.textureFiltering?w.texture||!p||f||r.usePalette||w.allowAlphaReject||w.allowAlphaBlend?t:o:r.usePalette||255!==w.color.red||255!==w.color.green||255!==w.color.blue||"none"!==w.textureFiltering?i:a,n(e)}}if(r.showGlobalWireframe||w.hasWireframe){for(let e=1;e<y;e++)Rngon.defaultPipeline.rasterizer.line(l[e-1],l[e],w.wireframeColor,n,!0);for(let e=1;e<b;e++)Rngon.defaultPipeline.rasterizer.line(d[e-1],d[e],w.wireframeColor,n,!0)}},u.line=function(e=Rngon.vertex(),t=Rngon.vertex(),n=Rngon.color(),r=0,o=!1){if(255!==n.alpha)return;const a=Rngon.state.active.usePerspectiveInterpolation,i=Rngon.state.active.farPlaneDistance,s=Rngon.state.active.useFragmentBuffer,l=Rngon.state.active.useDepthBuffer?Rngon.state.active.depthBuffer.data:null,d=Rngon.state.active.pixelBuffer.data,h=new Uint32Array(d.buffer),c=Rngon.state.active.pixelBuffer.width,g=Rngon.state.active.pixelBuffer.height,u=Math.floor(e.x),f=Math.floor(e.y),p=Math.floor(t.x),v=Math.floor(t.y);let m=Math.round(Math.sqrt((p-u)*(p-u)+(v-f)*(v-f)));const x=(p-u)/m,w=(v-f)/m;let R=u,y=f;const b=a?e.w:1,z=a?t.w:1,M=e.z/i,_=t.z/i;let B=M/b;const S=(_/z-M/b)/m;let P=e.shade/b;const C=(t.shade/z-e.shade/b)/m;let E=1/b;const A=(1/z-1/b)/m;if(s)var W=e.worldX/b,D=(t.worldX/z-e.worldX/b)/m,I=e.worldY/b,L=(t.worldY/z-e.worldY/b)/m,j=e.worldZ/b,N=(t.worldZ/z-e.worldZ/b)/m;for(;m--;)T(Math.floor(R),Math.floor(y)),R+=x,y+=w,B+=S,P+=C,E+=A,s&&(W+=D,I+=L,j+=N);function T(e,t){if(e<0||t<0||e>=c||t>=g)return;const a=e+t*c,i=B/E,u=P/E,f=n.red*u,p=n.green*u,v=n.blue*u;if(o||!l||l[a]>i){if(u>1){const e=4*a;d[e+0]=f,d[e+1]=p,d[e+2]=v,d[e+3]=255}else h[a]=(255<<24)+(v<<16)+(p<<8)+f;if(l&&!o&&(l[a]=i),s){const e=Rngon.state.active.fragmentBuffer.data[a];e.ngonIdx=r,e.textureUScaled=void 0,e.textureVScaled=void 0,e.depth=B/E,e.shade=P/E,e.worldX=W/E,e.worldY=I/E,e.worldZ=j/E,e.w=1/E}}}},u.point=function(e=Rngon.vertex(),t=Rngon.material(),n=0){if(255!=t.color.alpha)return;const r=Rngon.state.active.useFragmentBuffer,o=Rngon.state.active.useDepthBuffer?Rngon.state.active.depthBuffer.data:null,a=Rngon.state.active.pixelBuffer.data,i=new Uint32Array(a.buffer),s=Rngon.state.active.pixelBuffer.width,l=Rngon.state.active.pixelBuffer.height,d=Math.floor(e.x),h=Math.floor(e.y),c=d+h*s;if(d<0||h<0||d>=s||h>=l)return;const g=e.z/Rngon.state.active.farPlaneDistance,u=t.renderVertexShade?e.shade:1,f=t.texture?t.texture.pixels[0]:t.color,p=f.red*u,v=f.green*u,m=f.blue*u;if(!(o&&o[c]<=g)){if(u>1){const e=4*c;a[e+0]=p,a[e+1]=v,a[e+2]=m,a[e+3]=255}else i[c]=(255<<24)+(m<<16)+(v<<8)+p;if(o&&(o[c]=g),r){const t=Rngon.state.active.fragmentBuffer.data[c];t.ngonIdx=n,t.textureUScaled=0,t.textureVScaled=0,t.depth=g,t.shade=u,t.worldX=e.worldX,t.worldY=e.worldY,t.worldZ=e.worldZ,t.w=e.w}}},u.stipple=function(){const e=[{width:8,height:6,pixels:[0,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]},{width:4,height:4,pixels:[0,1,0,1,1,1,1,1,1,0,1,0,1,1,1,1]},{width:2,height:2,pixels:[1,0,0,1]}];for(let t=e.length-2;t>=0;t--)e.push({width:e[t].width,height:e[t].height,pixels:e[t].pixels.map((e=>Number(!e)))});return function(t,n,r){if(t<=0)return!0;if(t>=255)return!1;{const o=Math.floor(t/(256/e.length)),a=e[o],i=n%a.width+r%a.height*a.width;if(a.pixels[i])return!0}return!1}}(),v.object_space_matrix=function(e){const t=Rngon.matrix44.translation(e.translation.x,e.translation.y,e.translation.z),n=Rngon.matrix44.rotation(e.rotation.x,e.rotation.y,e.rotation.z),r=Rngon.matrix44.scaling(e.scale.x,e.scale.y,e.scale.z);return Rngon.matrix44.multiply(Rngon.matrix44.multiply(t,n),r)},m.perspective_divide=function(e){for(const t of e.vertices)Rngon.vertex.perspective_divide(t)},m.transform=function(e,t){for(const n of e.vertices)Rngon.vertex.transform(n,t)};const x=["x","y","z"],w=[1,-1];function R(e={}){if(e={width:0,height:0,pixels:[],encoding:"none",channels:"rgba:8+8+8+8",needsFlip:!0,...e},Rngon.assert?.(Number.isInteger(e.width)&&Number.isInteger(e.height),"Expected texture width and height to be integer values."),Rngon.assert?.(e.width>=0&&e.height>=0,"Expected texture width and height to be no less than zero."),Rngon.assert?.(e.width<=32768&&e.height<=32768,"Expected texture width/height to be no more than 32768/32768."),"none"!==e.encoding)if("base64"===e.encoding){const t=atob(e.pixels);switch(e.pixels=[],e.channels){case"rgba:8+8+8+8":Rngon.assert?.(t.length===e.width*e.height*4,"Unexpected data length for a Base64-encoded texture; expected 4 bytes per pixel.");for(let n=0;n<e.width*e.height*4;n++)e.pixels.push(t.charCodeAt(n));break;case"rgba:5+5+5+1":Rngon.assert?.(t.length===e.width*e.height*2,"Unexpected data length for a Base64-encoded texture; expected 2 bytes per pixel.");for(let n=0;n<e.width*e.height*2;n+=2){const r=t.charCodeAt(n)|t.charCodeAt(n+1)<<8;e.pixels.push(8*(31&r)),e.pixels.push(8*(r>>5&31)),e.pixels.push(8*(r>>10&31)),e.pixels.push(255*(r>>15&1))}break;default:Rngon.$throw("Unrecognized value for texture 'channels' attribute.")}}else"none"!==e.encoding&&Rngon.$throw("Unknown texture data encoding '"+e.encoding+"'.");Rngon.assert?.(e.pixels.length===e.width*e.height*4,"The texture's pixel array size doesn't match its width and height.");const t=[];for(let n=0;n<e.height;n++)for(let r=0;r<e.width;r++){const o=4*(r+(e.needsFlip?e.height-n-1:n)*e.width);t.push({red:e.pixels[o+0],green:e.pixels[o+1],blue:e.pixels[o+2],alpha:e.pixels[o+3]})}const n=[];for(let r=0;;r++){const o=Math.max(1,Math.floor(e.width/Math.pow(2,r))),a=Math.max(1,Math.floor(e.height/Math.pow(2,r))),i=[];{const n=e.width/o,r=e.height/a;for(let s=0;s<a;s++)for(let a=0;a<o;a++){const l=a+s*o,d=Math.floor(a*n)+Math.floor(s*r)*e.width;i[l]=t[d]}}if(n.push({width:o,height:a,pixels:i}),1===o&&1===a){Rngon.assert?.(n.length>0,"Failed to generate mip levels for a texture.");break}}return{...e,pixels:t,mipLevels:n}}function y(e=0,t=0,n=0){return Rngon.assert?.("number"==typeof e&&"number"==typeof t&&"number"==typeof n,"Expected numbers as parameters to the vector factory."),{x:e,y:t,z:n}}function b(e=0,t=0,n=0,r=0,o=0,a=1,i=1,s=e,l=t,d=n){return Rngon.assert?.("number"==typeof e&&"number"==typeof t&&"number"==typeof n&&"number"==typeof a&&"number"==typeof r&&"number"==typeof o&&"number"==typeof s&&"number"==typeof l&&"number"==typeof d,"Expected numbers as parameters to the vertex factory."),{x:e,y:t,z:n,u:r,v:o,w:a,shade:i,worldX:s,worldY:l,worldZ:d}}m.clip_to_viewport=function(e){for(const t of x)for(const n of w){if(!e.vertices.length)break;if(1==e.vertices.length){if(e.vertices[0].x<=e.vertices[0].w&&-e.vertices[0].x<=e.vertices[0].w&&e.vertices[0].y<=e.vertices[0].w&&-e.vertices[0].y<=e.vertices[0].w&&e.vertices[0].z<=e.vertices[0].w&&-e.vertices[0].z<=e.vertices[0].w)break;e.vertices.length=0;break}let r=e.vertices[e.vertices.length-(2==e.vertices.length?2:1)],o=r[t]*n,a=o<=r.w,i=0,s=e.vertices.length;for(let l=0;l<s;l++){const d=e.vertices[l][t]*n,h=d<=e.vertices[l].w;if(h^a){const t=(r.w-o)/(r.w-o-(e.vertices[l].w-d));e.vertices[s+i++]=Rngon.vertex(Rngon.lerp(r.x,e.vertices[l].x,t),Rngon.lerp(r.y,e.vertices[l].y,t),Rngon.lerp(r.z,e.vertices[l].z,t),Rngon.lerp(r.u,e.vertices[l].u,t),Rngon.lerp(r.v,e.vertices[l].v,t),Rngon.lerp(r.w,e.vertices[l].w,t),Rngon.lerp(r.shade,e.vertices[l].shade,t),Rngon.lerp(r.worldX,e.vertices[l].worldX,t),Rngon.lerp(r.worldY,e.vertices[l].worldY,t),Rngon.lerp(r.worldZ,e.vertices[l].worldZ,t))}h&&(e.vertices[s+i++]=e.vertices[l]),r=e.vertices[l],o=d,a=h}e.vertices.splice(0,s)}},R.deep_copy=function(e){const t=new Array(e.width*e.height*4);for(let n=0;n<e.width*e.height;n++)t[4*n+0]=e.pixels[n].red,t[4*n+1]=e.pixels[n].green,t[4*n+2]=e.pixels[n].blue,t[4*n+3]=e.pixels[n].alpha;return Rngon.texture({...e,pixels:t})},R.load=function(e){return new Promise(((t,n)=>{fetch(e).then((e=>e.json())).then((e=>{t(Rngon.texture(e))})).catch((t=>{Rngon.$throw(`Failed to create a texture with data from file '${e}'. Error: '${t}'.`)}))}))},y.transform=function(e,t=[]){Rngon.assert?.(16===t.length,"Expected a 4 x 4 matrix to transform the vector by.");const n=t[0]*e.x+t[4]*e.y+t[8]*e.z,r=t[1]*e.x+t[5]*e.y+t[9]*e.z,o=t[2]*e.x+t[6]*e.y+t[10]*e.z;e.x=n,e.y=r,e.z=o},y.normalize=function(e){const t=e.x*e.x+e.y*e.y+e.z*e.z;if(0!=t&&1!=t){const n=1/Math.sqrt(t);e.x*=n,e.y*=n,e.z*=n}},y.dot=function(e,t){return e.x*t.x+e.y*t.y+e.z*t.z},y.cross=function(e,t){const n=Rngon.vector();return n.x=e.y*t.z-e.z*t.y,n.y=e.z*t.x-e.x*t.z,n.z=e.x*t.y-e.y*t.x,n},y.invert=function(e){e.x*=-1,e.y*=-1,e.z*=-1},b.transform=function(e,t=[]){Rngon.assert?.(16===t.length,"Expected a 4 x 4 matrix to transform the vertex by.");const n=t[0]*e.x+t[4]*e.y+t[8]*e.z+t[12]*e.w,r=t[1]*e.x+t[5]*e.y+t[9]*e.z+t[13]*e.w,o=t[2]*e.x+t[6]*e.y+t[10]*e.z+t[14]*e.w,a=t[3]*e.x+t[7]*e.y+t[11]*e.z+t[15]*e.w;e.x=n,e.y=r,e.z=o,e.w=a},b.perspective_divide=function(e){e.x/=e.w,e.y/=e.w};const z={initialize_internal_render_state:function(e={},t={}){const n=Rngon.state.active=Rngon.state(e.state);n.useDepthBuffer=Boolean(e.useDepthBuffer),n.showGlobalWireframe=Boolean(e.globalWireframe),n.lights=e.lights,n.renderScale="number"==typeof e.resolution?e.resolution:1,n.offscreenRenderWidth=e.resolution.width,n.offscreenRenderHeight=e.resolution.height,n.nearPlaneDistance=e.nearPlane,n.farPlaneDistance=e.farPlane,n.fov=e.fov,n.cameraDirection=e.cameraDirection,n.cameraPosition=e.cameraPosition,n.usePerspectiveInterpolation=Boolean(e.usePerspectiveInterpolation),n.useFragmentBuffer=Boolean(e.useFragmentBuffer||n.usePixelShader&&n.pixel_shader?.toString().match(/{(.+)?}/)[1].includes("fragmentBuffer")),n.usePalette=Array.isArray(e.palette),n.palette=e.palette,n.modules.rasterize="function"==typeof t.rasterizer?t.rasterizer:null===t.rasterizer?null:Rngon.defaultPipeline.rasterizer,n.modules.transform_clip_light="function"==typeof t.transformClipLighter?t.transformClipLighter:null===t.transformClipLighter?null:Rngon.defaultPipeline.transform_clip_lighter,n.modules.surface_wipe="function"==typeof t.surfaceWiper?t.surfaceWiper:null===t.surfaceWiper?null:Rngon.defaultPipeline.surface_wiper,n.usePixelShader=Boolean(t.pixelShader),n.modules.pixel_shader="function"==typeof t.pixelShader?t.pixelShader:(t.pixelShader,null),n.useVertexShader=Boolean(t.vertexShader),n.modules.vertex_shader="function"==typeof t.vertexShader?t.vertexShader:(t.vertexShader,null),n.useContextShader=Boolean(t.contextShader),n.modules.context_shader="function"==typeof t.contextShader?t.contextShader:(t.contextShader,null),n.modules.raster_shader="function"==typeof t.rasterShader?t.rasterShader:void 0},prepare_ngon_cache:function(e=[Rngon.ngon()]){Rngon.assert?.(e instanceof Array,"Invalid arguments to n-gon cache initialization.");const t=Rngon.state.active.ngonCache,n=e.reduce(((e,t)=>e+t.ngons.length),0);if(!t||!t.ngons.length||t.ngons.length<n){const e=n-t.ngons.length;t.ngons.push(...new Array(e).fill().map((e=>Rngon.ngon())))}t.count=0},prepare_vertex_cache:function(e=[Rngon.ngon()]){Rngon.assert?.(e instanceof Array,"Invalid arguments to n-gon cache initialization.");const t=Rngon.state.active.vertexCache;let n=0;for(const t of e)for(const e of t.ngons)n+=e.vertices.length;if(!t||!t.vertices.length||t.vertices.length<n){const e=n-t.vertices.length;t.vertices.push(...new Array(e).fill().map((e=>Rngon.vertex())))}t.count=0},mark_npot_textures_in_ngon_cache:function(){for(let e=0;e<Rngon.state.active.ngonCache.count;e++){const t=Rngon.state.active.ngonCache.ngons[e];if(t.material.texture&&"affine"===t.material.textureMapping){let e=0==(t.material.texture.width&t.material.texture.width-1),n=0==(t.material.texture.height&t.material.texture.height-1);0===t.material.texture.width&&(e=!1),0===t.material.texture.height&&(n=!1),e&&n||(t.material.textureMapping="affine-npot")}}},get defaultRenderOptions(){return{cameraPosition:Rngon.vector(0,0,0),cameraDirection:Rngon.vector(0,0,0),state:void 0,resolution:1,fov:43,nearPlane:1,farPlane:1e3,useDepthBuffer:!0,useFragmentBuffer:!1,usePerspectiveInterpolation:!0,globalWireframe:!1,hibernateWhenTargetNotVisible:!0,lights:[],palette:null}},get defaultRenderPipeline(){return{surfaceWipe:void 0,rasterize:void 0,transformClipLighter:void 0,pixelShader:null,vertexShader:null,contextShader:null,rasterShader:void 0}},setup_render_call_info:function(){return{renderWidth:0,renderHeight:0,numNgonsRendered:0,totalRenderTimeMs:performance.now()}}};function M(e="default"){return M[e]||(M[e]=_())}function _(){return{modules:{transform_clip_lighter:void 0,surface_wiper:void 0,rasterizer:void 0,vertex_shader:void 0,pixel_shader:void 0,context_shader:void 0,raster_shader:void 0},useDepthBuffer:!1,depthBuffer:{width:1,height:1,data:new Array(1),clearValue:1/0},usePalette:!1,palette:void 0,pixelBuffer:new ImageData(1,1),useFragmentBuffer:!1,fragmentBuffer:{width:1,height:1,data:new Array(1),clearValue:{ngonIdx:void 0,textureUScaled:void 0,textureVScaled:void 0,textureMipLevelIdx:void 0,worldX:void 0,worldY:void 0,worldZ:void 0,depth:void 0,shade:void 0,w:void 0}},usePixelShader:!1,pixel_shader:void 0,useVertexShader:!1,vertex_shader:void 0,useContextShader:!1,context_shader:void 0,offscreenRenderWidth:1,offscreenRenderHeight:1,renderScale:1,usePerspectiveInterpolation:!0,showGlobalWireframe:!1,nearPlaneDistance:1,farPlaneDistance:1,fov:45,cameraDirection:void 0,cameraPosition:void 0,allowWindowAlert:!1,ngonCache:{count:0,ngons:[]},vertexCache:{count:0,vertices:[]},lights:[]}}M.active=_();const B=[0,.0061359,.0122715,.0184067,.0245412,.0306748,.0368072,.0429383,.0490677,.0551952,.0613207,.0674439,.0735646,.0796824,.0857973,.091909,.0980171,.1041216,.1102222,.1163186,.1224107,.1284981,.1345807,.1406582,.1467305,.1527972,.1588581,.1649131,.1709619,.1770042,.1830399,.1890687,.1950903,.2011046,.2071114,.2131103,.2191012,.2250839,.2310581,.2370236,.2429802,.2489276,.2548657,.2607941,.2667128,.2726214,.2785197,.2844075,.2902847,.2961509,.3020059,.3078496,.3136817,.319502,.3253103,.3311063,.3368899,.3426607,.3484187,.3541635,.359895,.365613,.3713172,.3770074,.3826834,.388345,.393992,.3996242,.4052413,.4108432,.4164296,.4220003,.4275551,.4330938,.4386162,.4441221,.4496113,.4550836,.4605387,.4659765,.4713967,.4767992,.4821838,.4875502,.4928982,.4982277,.5035384,.5088301,.5141027,.519356,.5245897,.5298036,.5349976,.5401715,.545325,.550458,.5555702,.5606616,.5657318,.5707807,.5758082,.580814,.5857979,.5907597,.5956993,.6006165,.605511,.6103828,.6152316,.6200572,.6248595,.6296382,.6343933,.6391244,.6438315,.6485144,.6531728,.6578067,.6624158,.6669999,.671559,.6760927,.680601,.6850837,.6895405,.6939715,.6983762,.7027547,.7071068,.7114322,.7157308,.7200025,.7242471,.7284644,.7326543,.7368166,.7409511,.7450578,.7491364,.7531868,.7572088,.7612024,.7651673,.7691033,.7730105,.7768885,.7807372,.7845566,.7883464,.7921066,.7958369,.7995373,.8032075,.8068476,.8104572,.8140363,.8175848,.8211025,.8245893,.828045,.8314696,.8348629,.8382247,.841555,.8448536,.8481203,.8513552,.854558,.8577286,.8608669,.8639729,.8670462,.870087,.873095,.8760701,.8790122,.8819213,.8847971,.8876396,.8904487,.8932243,.8959662,.8986745,.9013488,.9039893,.9065957,.909168,.911706,.9142098,.9166791,.9191139,.921514,.9238795,.9262102,.9285061,.930767,.9329928,.9351835,.937339,.9394592,.9415441,.9435935,.9456073,.9475856,.9495282,.951435,.953306,.9551412,.9569403,.9587035,.9604305,.9621214,.9637761,.9653944,.9669765,.9685221,.9700313,.9715039,.97294,.9743394,.9757021,.9770281,.9783174,.9795698,.9807853,.9819639,.9831055,.9842101,.9852776,.9863081,.9873014,.9882576,.9891765,.9900582,.9909026,.9917098,.9924795,.9932119,.993907,.9945646,.9951847,.9957674,.9963126,.9968203,.9972905,.9977231,.9981181,.9984756,.9987955,.9990777,.9993224,.9995294,.9996988,.9998306,.9999247,.9999812,1,.9999812,.9999247,.9998306,.9996988,.9995294,.9993224,.9990777,.9987955,.9984756,.9981181,.9977231,.9972905,.9968203,.9963126,.9957674,.9951847,.9945646,.993907,.9932119,.9924795,.9917098,.9909026,.9900582,.9891765,.9882576,.9873014,.9863081,.9852776,.9842101,.9831055,.9819639,.9807853,.9795698,.9783174,.9770281,.9757021,.9743394,.97294,.9715039,.9700313,.9685221,.9669765,.9653944,.9637761,.9621214,.9604305,.9587035,.9569403,.9551412,.953306,.951435,.9495282,.9475856,.9456073,.9435935,.9415441,.9394592,.937339,.9351835,.9329928,.930767,.9285061,.9262102,.9238795,.921514,.9191139,.9166791,.9142098,.911706,.909168,.9065957,.9039893,.9013488,.8986745,.8959662,.8932243,.8904487,.8876396,.8847971,.8819213,.8790122,.8760701,.873095,.870087,.8670462,.8639729,.8608669,.8577286,.854558,.8513552,.8481203,.8448536,.841555,.8382247,.8348629,.8314696,.828045,.8245893,.8211025,.8175848,.8140363,.8104572,.8068476,.8032075,.7995373,.7958369,.7921066,.7883464,.7845566,.7807372,.7768885,.7730105,.7691033,.7651673,.7612024,.7572088,.7531868,.7491364,.7450578,.7409511,.7368166,.7326543,.7284644,.7242471,.7200025,.7157308,.7114322,.7071068,.7027547,.6983762,.6939715,.6895405,.6850837,.680601,.6760927,.671559,.6669999,.6624158,.6578067,.6531728,.6485144,.6438315,.6391244,.6343933,.6296382,.6248595,.6200572,.6152316,.6103828,.605511,.6006165,.5956993,.5907597,.5857979,.580814,.5758082,.5707807,.5657318,.5606616,.5555702,.550458,.545325,.5401715,.5349976,.5298036,.5245897,.519356,.5141027,.5088301,.5035384,.4982277,.4928982,.4875502,.4821838,.4767992,.4713967,.4659765,.4605387,.4550836,.4496113,.4441221,.4386162,.4330938,.4275551,.4220003,.4164296,.4108432,.4052413,.3996242,.393992,.388345,.3826834,.3770074,.3713172,.365613,.359895,.3541635,.3484187,.3426607,.3368899,.3311063,.3253103,.319502,.3136817,.3078496,.3020059,.2961509,.2902847,.2844075,.2785197,.2726214,.2667128,.2607941,.2548657,.2489276,.2429802,.2370236,.2310581,.2250839,.2191012,.2131103,.2071114,.2011046,.1950903,.1890687,.1830399,.1770042,.1709619,.1649131,.1588581,.1527972,.1467305,.1406582,.1345807,.1284981,.1224107,.1163186,.1102222,.1041216,.0980171,.091909,.0857973,.0796824,.0735646,.0674439,.0613207,.0551952,.0490677,.0429383,.0368072,.0306748,.0245412,.0184067,.0122715,.0061359,0,-.0061359,-.0122715,-.0184067,-.0245412,-.0306748,-.0368072,-.0429383,-.0490677,-.0551952,-.0613207,-.0674439,-.0735646,-.0796824,-.0857973,-.091909,-.0980171,-.1041216,-.1102222,-.1163186,-.1224107,-.1284981,-.1345807,-.1406582,-.1467305,-.1527972,-.1588581,-.1649131,-.1709619,-.1770042,-.1830399,-.1890687,-.1950903,-.2011046,-.2071114,-.2131103,-.2191012,-.2250839,-.2310581,-.2370236,-.2429802,-.2489276,-.2548657,-.2607941,-.2667128,-.2726214,-.2785197,-.2844075,-.2902847,-.2961509,-.3020059,-.3078496,-.3136817,-.319502,-.3253103,-.3311063,-.3368899,-.3426607,-.3484187,-.3541635,-.359895,-.365613,-.3713172,-.3770074,-.3826834,-.388345,-.393992,-.3996242,-.4052413,-.4108432,-.4164296,-.4220003,-.4275551,-.4330938,-.4386162,-.4441221,-.4496113,-.4550836,-.4605387,-.4659765,-.4713967,-.4767992,-.4821838,-.4875502,-.4928982,-.4982277,-.5035384,-.5088301,-.5141027,-.519356,-.5245897,-.5298036,-.5349976,-.5401715,-.545325,-.550458,-.5555702,-.5606616,-.5657318,-.5707807,-.5758082,-.580814,-.5857979,-.5907597,-.5956993,-.6006165,-.605511,-.6103828,-.6152316,-.6200572,-.6248595,-.6296382,-.6343933,-.6391244,-.6438315,-.6485144,-.6531728,-.6578067,-.6624158,-.6669999,-.671559,-.6760927,-.680601,-.6850837,-.6895405,-.6939715,-.6983762,-.7027547,-.7071068,-.7114322,-.7157308,-.7200025,-.7242471,-.7284644,-.7326543,-.7368166,-.7409511,-.7450578,-.7491364,-.7531868,-.7572088,-.7612024,-.7651673,-.7691033,-.7730105,-.7768885,-.7807372,-.7845566,-.7883464,-.7921066,-.7958369,-.7995373,-.8032075,-.8068476,-.8104572,-.8140363,-.8175848,-.8211025,-.8245893,-.828045,-.8314696,-.8348629,-.8382247,-.841555,-.8448536,-.8481203,-.8513552,-.854558,-.8577286,-.8608669,-.8639729,-.8670462,-.870087,-.873095,-.8760701,-.8790122,-.8819213,-.8847971,-.8876396,-.8904487,-.8932243,-.8959662,-.8986745,-.9013488,-.9039893,-.9065957,-.909168,-.911706,-.9142098,-.9166791,-.9191139,-.921514,-.9238795,-.9262102,-.9285061,-.930767,-.9329928,-.9351835,-.937339,-.9394592,-.9415441,-.9435935,-.9456073,-.9475856,-.9495282,-.951435,-.953306,-.9551412,-.9569403,-.9587035,-.9604305,-.9621214,-.9637761,-.9653944,-.9669765,-.9685221,-.9700313,-.9715039,-.97294,-.9743394,-.9757021,-.9770281,-.9783174,-.9795698,-.9807853,-.9819639,-.9831055,-.9842101,-.9852776,-.9863081,-.9873014,-.9882576,-.9891765,-.9900582,-.9909026,-.9917098,-.9924795,-.9932119,-.993907,-.9945646,-.9951847,-.9957674,-.9963126,-.9968203,-.9972905,-.9977231,-.9981181,-.9984756,-.9987955,-.9990777,-.9993224,-.9995294,-.9996988,-.9998306,-.9999247,-.9999812,-1,-.9999812,-.9999247,-.9998306,-.9996988,-.9995294,-.9993224,-.9990777,-.9987955,-.9984756,-.9981181,-.9977231,-.9972905,-.9968203,-.9963126,-.9957674,-.9951847,-.9945646,-.993907,-.9932119,-.9924795,-.9917098,-.9909026,-.9900582,-.9891765,-.9882576,-.9873014,-.9863081,-.9852776,-.9842101,-.9831055,-.9819639,-.9807853,-.9795698,-.9783174,-.9770281,-.9757021,-.9743394,-.97294,-.9715039,-.9700313,-.9685221,-.9669765,-.9653944,-.9637761,-.9621214,-.9604305,-.9587035,-.9569403,-.9551412,-.953306,-.951435,-.9495282,-.9475856,-.9456073,-.9435935,-.9415441,-.9394592,-.937339,-.9351835,-.9329928,-.930767,-.9285061,-.9262102,-.9238795,-.921514,-.9191139,-.9166791,-.9142098,-.911706,-.909168,-.9065957,-.9039893,-.9013488,-.8986745,-.8959662,-.8932243,-.8904487,-.8876396,-.8847971,-.8819213,-.8790122,-.8760701,-.873095,-.870087,-.8670462,-.8639729,-.8608669,-.8577286,-.854558,-.8513552,-.8481203,-.8448536,-.841555,-.8382247,-.8348629,-.8314696,-.828045,-.8245893,-.8211025,-.8175848,-.8140363,-.8104572,-.8068476,-.8032075,-.7995373,-.7958369,-.7921066,-.7883464,-.7845566,-.7807372,-.7768885,-.7730105,-.7691033,-.7651673,-.7612024,-.7572088,-.7531868,-.7491364,-.7450578,-.7409511,-.7368166,-.7326543,-.7284644,-.7242471,-.7200025,-.7157308,-.7114322,-.7071068,-.7027547,-.6983762,-.6939715,-.6895405,-.6850837,-.680601,-.6760927,-.671559,-.6669999,-.6624158,-.6578067,-.6531728,-.6485144,-.6438315,-.6391244,-.6343933,-.6296382,-.6248595,-.6200572,-.6152316,-.6103828,-.605511,-.6006165,-.5956993,-.5907597,-.5857979,-.580814,-.5758082,-.5707807,-.5657318,-.5606616,-.5555702,-.550458,-.545325,-.5401715,-.5349976,-.5298036,-.5245897,-.519356,-.5141027,-.5088301,-.5035384,-.4982277,-.4928982,-.4875502,-.4821838,-.4767992,-.4713967,-.4659765,-.4605387,-.4550836,-.4496113,-.4441221,-.4386162,-.4330938,-.4275551,-.4220003,-.4164296,-.4108432,-.4052413,-.3996242,-.393992,-.388345,-.3826834,-.3770074,-.3713172,-.365613,-.359895,-.3541635,-.3484187,-.3426607,-.3368899,-.3311063,-.3253103,-.319502,-.3136817,-.3078496,-.3020059,-.2961509,-.2902847,-.2844075,-.2785197,-.2726214,-.2667128,-.2607941,-.2548657,-.2489276,-.2429802,-.2370236,-.2310581,-.2250839,-.2191012,-.2131103,-.2071114,-.2011046,-.1950903,-.1890687,-.1830399,-.1770042,-.1709619,-.1649131,-.1588581,-.1527972,-.1467305,-.1406582,-.1345807,-.1284981,-.1224107,-.1163186,-.1102222,-.1041216,-.0980171,-.091909,-.0857973,-.0796824,-.0735646,-.0674439,-.0613207,-.0551952,-.0490677,-.0429383,-.0368072,-.0306748,-.0245412,-.0184067,-.0122715,-.0061359,-0,.0061359,.0122715,.0184067,.0245412,.0306748,.0368072,.0429383,.0490677,.0551952,.0613207,.0674439,.0735646,.0796824,.0857973,.091909,.0980171,.1041216,.1102222,.1163186,.1224107,.1284981,.1345807,.1406582,.1467305,.1527972,.1588581,.1649131,.1709619,.1770042,.1830399,.1890687,.1950903,.2011046,.2071114,.2131103,.2191012,.2250839,.2310581,.2370236,.2429802,.2489276,.2548657,.2607941,.2667128,.2726214,.2785197,.2844075,.2902847,.2961509,.3020059,.3078496,.3136817,.319502,.3253103,.3311063,.3368899,.3426607,.3484187,.3541635,.359895,.365613,.3713172,.3770074,.3826834,.388345,.393992,.3996242,.4052413,.4108432,.4164296,.4220003,.4275551,.4330938,.4386162,.4441221,.4496113,.4550836,.4605387,.4659765,.4713967,.4767992,.4821838,.4875502,.4928982,.4982277,.5035384,.5088301,.5141027,.519356,.5245897,.5298036,.5349976,.5401715,.545325,.550458,.5555702,.5606616,.5657318,.5707807,.5758082,.580814,.5857979,.5907597,.5956993,.6006165,.605511,.6103828,.6152316,.6200572,.6248595,.6296382,.6343933,.6391244,.6438315,.6485144,.6531728,.6578067,.6624158,.6669999,.671559,.6760927,.680601,.6850837,.6895405,.6939715,.6983762,.7027547,.7071068,.7114322,.7157308,.7200025,.7242471,.7284644,.7326543,.7368166,.7409511,.7450578,.7491364,.7531868,.7572088,.7612024,.7651673,.7691033,.7730105,.7768885,.7807372,.7845566,.7883464,.7921066,.7958369,.7995373,.8032075,.8068476,.8104572,.8140363,.8175848,.8211025,.8245893,.828045,.8314696,.8348629,.8382247,.841555,.8448536,.8481203,.8513552,.854558,.8577286,.8608669,.8639729,.8670462,.870087,.873095,.8760701,.8790122,.8819213,.8847971,.8876396,.8904487,.8932243,.8959662,.8986745,.9013488,.9039893,.9065957,.909168,.911706,.9142098,.9166791,.9191139,.921514,.9238795,.9262102,.9285061,.930767,.9329928,.9351835,.937339,.9394592,.9415441,.9435935,.9456073,.9475856,.9495282,.951435,.953306,.9551412,.9569403,.9587035,.9604305,.9621214,.9637761,.9653944,.9669765,.9685221,.9700313,.9715039,.97294,.9743394,.9757021,.9770281,.9783174,.9795698,.9807853,.9819639,.9831055,.9842101,.9852776,.9863081,.9873014,.9882576,.9891765,.9900582,.9909026,.9917098,.9924795,.9932119,.993907,.9945646,.9951847,.9957674,.9963126,.9968203,.9972905,.9977231,.9981181,.9984756,.9987955,.9990777,.9993224,.9995294,.9996988,.9998306,.9999247,.9999812],S={version:{major:0,minor:5,patch:0,dev:!0},defaultPipeline:{rasterizer:u,surface_wiper:function(){Rngon.state.active.pixelBuffer.data.fill(0),Rngon.state.active.useDepthBuffer&&Rngon.state.active.depthBuffer.data.fill(Rngon.state.active.depthBuffer.clearValue)},transform_clip_lighter:function(e=[],t=[],n=[],r=[],o=[],a){const i={x:0,y:0,z:0},s=Rngon.state.active.ngonCache,l=Rngon.state.active.vertexCache,d=Rngon.matrix44.multiply(r,n);for(const n of e){if(!n.material.hasWireframe&&n.material.allowAlphaReject&&n.material.color.alpha<=0)continue;if(!n.material.isTwoSided&&(i.x=n.vertices[0].x-a.x,i.y=n.vertices[0].y-a.y,i.z=n.vertices[0].z-a.z,Rngon.vector.dot(n.normal,i)>=0))continue;const e=s.ngons[s.count++];e.vertices.length=0;for(let t=0;t<n.vertices.length;t++){const r=n.vertices[t],o=e.vertices[t]=l.vertices[l.count++];o.x=r.x,o.y=r.y,o.z=r.z,o.u=r.u,o.v=r.v,o.w=r.w,o.shade=r.shade,(Rngon.state.active.useVertexShader||"gouraud"===n.material.vertexShading)&&(e.vertexNormals[t]=Rngon.vector(n.vertexNormals[t].x,n.vertexNormals[t].y,n.vertexNormals[t].z))}if(e.material=n.material,e.normal.x=n.normal.x,e.normal.y=n.normal.y,e.normal.z=n.normal.z,e.isActive=!0,e.mipLevel=n.mipLevel,!e.material.isInScreenSpace){if(Rngon.ngon.transform(e,t),Rngon.state.active.useFragmentBuffer)for(let t=0;t<e.vertices.length;t++)e.vertices[t].worldX=e.vertices[t].x,e.vertices[t].worldY=e.vertices[t].y,e.vertices[t].worldZ=e.vertices[t].z;if(Rngon.state.active.useVertexShader||"gouraud"===e.material.vertexShading)for(let n=0;n<e.vertices.length;n++)Rngon.vector.transform(e.vertexNormals[n],t),Rngon.vector.normalize(e.vertexNormals[n]);else Rngon.vector.transform(e.normal,t),Rngon.vector.normalize(e.normal);if("none"!==e.material.vertexShading&&f(e),Rngon.state.active.useVertexShader){const t=[e,a],n="ngon, cameraPos";switch(typeof Rngon.state.active.modules.vertex_shader){case"function":Rngon.state.active.modules.vertex_shader(...t);break;case"string":Function(n,`(${Rngon.state.active.modules.vertex_shader})(${n})`)(...t);break;default:Rngon.$throw("Unrecognized type of vertex shader function.")}}if(Rngon.ngon.transform(e,d),Rngon.ngon.clip_to_viewport(e),!e.vertices.length){s.count--;continue}Rngon.ngon.transform(e,o),Rngon.ngon.perspective_divide(e)}}for(let e=s.count;e<s.ngons.length;e++)s.ngons[e].isActive=!1}},render:function({target:e=null,scene:t=[Rngon.mesh()],options:n={},pipeline:r={}}={}){const o=Rngon.renderShared.setup_render_call_info();n=Object.freeze({...Rngon.renderShared.defaultRenderOptions,...n}),r=Object.freeze({...Rngon.renderShared.defaultRenderPipeline,...r}),Rngon.renderShared.initialize_internal_render_state(n,r),"string"==typeof e&&(e=document.getElementById(e)),Rngon.assert?.(null===e||e instanceof HTMLCanvasElement,"Invalid canvas element for rendering into."),Rngon.assert?.(!Rngon.state.active.usePalette||e instanceof HTMLPalettedCanvasElement,"For paletted rendering, the attribute is='paletted-canvas' must be present on the target <canvas>.");{const r=Rngon.surface(e,n);!r||n.hibernateWhenTargetNotVisible&&!r.is_in_view()||(r.display_meshes(t),o.renderWidth=r.width,o.renderHeight=r.height,o.numNgonsRendered=Rngon.state.active.ngonCache.count)}return o.totalRenderTimeMs=performance.now()-o.totalRenderTimeMs,o},render_async:async function(e=[Rngon.mesh()],t={},n=null){return t.modules={surfaceWipe:void 0,rasterize:void 0,transformClipLight:void 0},new Promise(((r,o)=>{const a=new Worker(URL.createObjectURL(new Blob([`(${p.toString()})()`],{type:"text/javascript"})));a.onmessage=e=>{if(a.terminate(),"string"==typeof(e=e.data).type)switch(e.type){case"rendering-finished":delete e.type,r(e);break;case"error":o(`A render worker reported the following error: ${e.errorText}`);break;default:o("A render worker sent an unrecognized message.")}else o("A render worker sent an invalid message.")},null===n&&(n=Array.from(document.getElementsByTagName("script")).filter((e=>e.src.endsWith("rngon.js")))[0].src),a.postMessage({type:"render",meshes:e,options:t,rngonUrl:n})}))},assert:function(e,t){e||Rngon.$throw(t)},$throw:function(e=""){throw Rngon.state.active.allowWindowAlert&&window.alert("Retro n-gon error: "+e),Error(e)},lerp:function(e,t,n){return e+n*(t-e)},bilinear_sample:function(e,t=.5,n=t){const r=Rngon.lerp(e(0,0),e(0,1),n),o=Rngon.lerp(e(1,0),e(1,1),n);return Rngon.lerp(r,o,t)},log:function(e="Hello there."){console.log(e)},renderable_width_of:function(e,t){return Math.floor(parseInt(window.getComputedStyle(e).getPropertyValue("width"))*t)},renderable_height_of:function(e,t){return Math.floor(parseInt(window.getComputedStyle(e).getPropertyValue("height"))*t)},color:function(e=0,t=0,n=0,r=255){return Rngon.assert?.(e>=0&&e<=255&&t>=0&&t<=255&&n>=0&&n<=255&&r>=0&&r<=255,"The given color values are out of range."),Object.freeze({red:e,green:t,blue:n,alpha:r,unitRange:Object.freeze({red:e/255,green:t/255,blue:n/255,alpha:r/255})})},color_index:function(e=0){return Rngon.assert?.(e>=0,"The given color index is out of range."),Object.freeze({index:e})},state:M,light:function e(t=Rngon.vector(0,0,0),n={}){return{position:t,...e.defaultSettings=e.defaultSettings||{intensity:100,clip:1,attenuation:1},...n}},material:function e(t={}){return{...e.default=e.default||{color:Rngon.color(255,255,255,255),wireframeColor:Rngon.color(0,0,0,255),texture:null,textureMapping:"ortho",textureFiltering:"none",uvWrapping:"repeat",vertexShading:"none",renderVertexShade:!0,ambientLightLevel:0,hasWireframe:!1,hasFill:!0,isTwoSided:!0,isInScreenSpace:!1,allowAlphaReject:!1,allowAlphaBlend:!1},...t}},matrix44:{scaling:function(e=0,t=0,n=0){return Object.freeze([e,0,0,0,0,t,0,0,0,0,n,0,0,0,0,1])},translation:function(e=0,t=0,n=0){return Object.freeze([1,0,0,0,0,1,0,0,0,0,1,0,e,t,n,1])},rotation:function(e=0,t=0,n=0){e=Rngon.trig.deg(e),t=Rngon.trig.deg(t),n=Rngon.trig.deg(n);const r=Rngon.trig.cos,o=Rngon.trig.sin,a=[1,0,0,0,0,r(e),-o(e),0,0,o(e),r(e),0,0,0,0,1],i=[r(t),0,o(t),0,0,1,0,0,-o(t),0,r(t),0,0,0,0,1],s=[r(n),-o(n),0,0,o(n),r(n),0,0,0,0,1,0,0,0,0,1],l=Rngon.matrix44.multiply(i,s),d=Rngon.matrix44.multiply(a,l);return Rngon.assert?.(16===d.length,"Expected a 4 x 4 matrix."),Object.freeze(d)},perspective:function(e=0,t=0,n=0,r=0){const o=Math.tan(e/2),a=n-r;return Object.freeze([1/(o*t),0,0,0,0,1/o,0,0,0,0,(-n-r)/a,1,0,0,2*r*(n/a),0])},ortho:function(e=0,t=0){return Object.freeze([e/2,0,0,0,0,-t/2,0,0,0,0,1,0,e/2-.5,t/2-.5,0,1])},multiply:function(e=[],t=[]){Rngon.assert?.(16===e.length&&16===t.length,"Expected 4 x 4 matrices.");let n=new Array(16);for(let r=0;r<4;r++)for(let o=0;o<4;o++)n[r+4*o]=e[r+0]*t[0+4*o]+e[r+4]*t[1+4*o]+e[r+8]*t[2+4*o]+e[r+12]*t[3+4*o];return Object.freeze(n)}},mesh:v,ngon:m,renderShared:z,surface:function(e){const t=Rngon.state.active,n=null===e;let r,o,a;try{({surfaceWidth:r,surfaceHeight:o,canvasElement:e,renderContext:a}=(n?function(){return{surfaceWidth:t.offscreenRenderWidth,surfaceHeight:t.offscreenRenderHeight,renderContext:{createImageData:function(e,t){return new ImageData(e,t)}}}}:function(){const n=e?.getContext("2d");Rngon.assert?.(e instanceof Element&&n,"Invalid canvas element."),t.usePalette&&(t.pixelBuffer.palette=t.palette);const r=Rngon.renderable_width_of(e,t.renderScale),o=Rngon.renderable_height_of(e,t.renderScale);return Rngon.assert?.(r>0&&o>0,"Failed to query the dimensions of the canvas."),e.setAttribute("width",r),e.setAttribute("height",o),{surfaceWidth:r,surfaceHeight:o,canvasElement:e,renderContext:n}})()),t.pixelBuffer.width==r&&t.pixelBuffer.height==o||(t.pixelBuffer=a.createImageData(r,o)),!t.useFragmentBuffer||t.fragmentBuffer.width==r&&t.fragmentBuffer.height==o||(t.fragmentBuffer.width=r,t.fragmentBuffer.height=o,t.fragmentBuffer.data=new Array(r*o).fill().map((e=>({})))),!t.useDepthBuffer||t.depthBuffer.width==r&&t.depthBuffer.height==o&&t.depthBuffer.data.length||(t.depthBuffer.width=r,t.depthBuffer.height=o,t.depthBuffer.data=new Array(t.depthBuffer.width*t.depthBuffer.height))}catch(e){return console.error(e),null}const i=Rngon.matrix44.multiply(Rngon.matrix44.rotation(t.cameraDirection.x,t.cameraDirection.y,t.cameraDirection.z),Rngon.matrix44.translation(-t.cameraPosition.x,-t.cameraPosition.y,-t.cameraPosition.z)),s=Rngon.matrix44.perspective(t.fov*(Math.PI/180),r/o,t.nearPlaneDistance,t.farPlaneDistance),l=Rngon.matrix44.ortho(r+1,o+1),d=Object.freeze({width:r,height:o,display_meshes:function(e=[]){if(t.modules.surface_wipe?.(),Rngon.renderShared.prepare_vertex_cache(e),Rngon.renderShared.prepare_ngon_cache(e),t.modules.transform_clip_light)for(const n of e)t.modules.transform_clip_light(n.ngons,Rngon.mesh.object_space_matrix(n),i,s,l,t.cameraPosition);if(t.useDepthBuffer&&t.ngonCache.ngons.sort(((e,t)=>{const n=e.isActive?e.vertices.reduce(((e,t)=>e+t.z),0)/e.vertices.length:Number.MAX_VALUE,r=t.isActive?t.vertices.reduce(((e,t)=>e+t.z),0)/t.vertices.length:Number.MAX_VALUE;return n===r?0:n>r?1:-1})),Rngon.renderShared.mark_npot_textures_in_ngon_cache(),t.modules.rasterize?.(),t.usePixelShader){const e={renderWidth:r,renderHeight:o,fragmentBuffer:t.fragmentBuffer.data,pixelBuffer:t.pixelBuffer.data,ngonCache:t.ngonCache.ngons,cameraPosition:t.cameraPosition},n=`{${Object.keys(e).join(",")}}`;switch(typeof t.modules.pixel_shader){case"function":t.modules.pixel_shader(e);break;case"string":Function(n,`(${t.modules.pixel_shader})(${n})`)(e);break;default:Rngon.$throw("Unrecognized type of pixel shader function.")}}n||(t.useContextShader?t.modules.context_shader({context:a,image:t.pixelBuffer}):a.putImageData(t.pixelBuffer,0,0))},is_in_view:function(){if(n)return!0;const t=window.innerHeight,r=e.getBoundingClientRect();return r.top>-r.height&&r.top<t}});return d},texture:R,trig:{sin:e=>B[e>>6],cos:e=>B[256+(e>>6)],deg:e=>182.04166666666666*(e>=0?e%360:360-Math.abs(e)%360)},vector:y,vertex:b}})(),r})()));